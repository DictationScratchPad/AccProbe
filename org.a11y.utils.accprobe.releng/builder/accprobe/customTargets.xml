<project name="Build specific targets and properties" default="noDefault" basedir=".">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- ===================================================================== -->
	<target name="allElements">
	    <ant antfile="${buildDirectory}/../org.eclipse.releng.basebuilder/plugins/org.eclipse.pde.build_3.4.1.R34x_v20080805/scripts/productBuild/allElements.xml" target="allElementsDelegator"/>
	</target>

	<!-- ===================================================================== -->
	<!-- Targets to assemble the built elements for particular configurations  -->
	<!-- These generally call the generated assemble scripts (named in -->
	<!-- ${assembleScriptName}) but may also add pre and post processing -->
	<!-- Add one target for each root element and each configuration -->
	<!-- ===================================================================== -->

 	<target name="assemble.org.eclipse.pde.build.container.feature.win32.win32.x86">
 		<ant antfile="${assembleScriptName}" dir="${buildDirectory}">			
 			<property name="archiveName" value="a11y-${productName}-${buildLabel}.zip"/>
		</ant>
		<!-- ADD POST STEPS -->
</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
	<!-- ===================================================================== -->
	<target name="checkLocal">
		<available property="mapsLocal" file="${buildDirectory}/maps" />
	</target>

	<target name="getMapFiles" depends="checkLocal" unless="mapsLocal">

		<!-- ***  change the repo info -->
		<property name="mapCvsRoot" value=":${cvsReadProtocol}:${cvsReadUser}@${cvsHost}:${cvsRep}" />
		<property name="mapVersionTag" value="HEAD" />
		<property name="packagePath" value="A11yAccProbe/org.a11y.${subprojectName}.${productName}.releng/maps"/>
		<cvs cvsRsh="ssh" cvsRoot="${mapCvsRoot}" tag="${mapVersionTag}" 
			package="${packagePath}" dest="${buildDirectory}/maps" />
		<copy todir="${buildDirectory}/maps/CVS" overwrite="true">
			<fileset dir="${buildDirectory}/maps/${packagePath}/CVS" />
		</copy>
		<copy todir="${buildDirectory}/maps" overwrite="true">
			<fileset dir="${buildDirectory}/maps/${packagePath}" />
		</copy>
		<delete dir="${buildDirectory}/maps/A11yAccProbe" />

        <!-- fetch the orbit.map file -->
        <get src="http://download.eclipse.org/tools/orbit/downloads/drops/${orbitBuildId}/orbitBundles-${orbitBuildId}.map" dest="${buildDirectory}/maps/orbit.map"/>
    </target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
		<mkdir dir="${buildDirectory}/${buildLabel}" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<!-- TODO: if your project requires more dependencies, add them here; if it does not require all of these, remove those not required -->
		<!-- done in start.sh
		<echo message="Download, then unpack: Eclipse SDK, ..." />
		<ant target="getDependency" antfile="${buildDirectory}/../org.eclipse.modeling.common.releng/scripts/getDependencies.xml">
			<property name="url" value="${eclipseURL}" />
			<property name="file" value="${eclipseFile}" />
			<property name="isUnpackedFile" value="${buildDirectory}/plugins/org.eclipse.platform.doc.isv/plugin.xml" />
		</ant>
		<ant target="getDependency" antfile="${buildDirectory}/../org.eclipse.modeling.common.releng/scripts/getDependencies.xml">
			<property name="url" value="${emfURL}" />
			<property name="file" value="${emfFile}" />
			<property name="isUnpackedFile" value="${buildDirectory}/plugins/org.eclipse.emf.ecore/plugin.xml" />
		</ant>
		-->
		
        <!-- fetch the .product file -->
        <property name="cvsRoot" value=":${cvsReadProtocol}:${cvsReadUser}@${cvsHost}:${cvsRep}" />
        <property name="packagePath" value="A11yAccProbe/org.a11y.${subprojectName}.${productName}/${productName}.product"/>
        <property name="productPluginDir" value="${buildDirectory}/plugins/org.a11y.${subprojectName}.${productName}"/>
        <mkdir dir="${productPluginDir}"/>
        <cvs cvsRsh="ssh" cvsRoot="${cvsRoot}" tag="HEAD" 
            package="${packagePath}" dest="${productPluginDir}" />
        <copy todir="${productPluginDir}" overwrite="true" file="${productPluginDir}/${packagePath}"/>
        <delete dir="${productPluginDir}/A11yAccProbe" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the fetch -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating build scripts -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before assembling -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after assembling-->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<target name="prePackage">
	</target>
	
	<target name="postPackage">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do after everything is built and assembled -->
	<!-- (e.g., testing, posting, emailing, ...) -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<antcall target="gatherLogs" />
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets -->
	<!-- ===================================================================== -->
	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>

		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features/org.a11y.utils.${productName}">
				<include name="*.log.zip" />
			</fileset>
		</unzip>
	</target>
	
	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
