<project default="run">

	<target name="init">
		<echo message="Set compilerArgs = '-enableJavadoc -encoding ISO-8859-1 -warn:-serial,nls,unused,unchecked,raw'"/>
		<property name="compilerArg" value="-enableJavadoc -encoding ISO-8859-1 -warn:-serial,nls,unused,unchecked,raw" />

		<!-- TODO: set correct source and target levels here -->
		<echo message="Set javacSource and javacTarget = 1.5"/>
		<property name="javacSource" value="1.5" />
		<property name="javacTarget" value="1.5" />
		
		<path id="bc">
			<fileset dir="${java.home}/lib">
				<include name="*.jar" />
			</fileset>
		</path>
		<property name="bootclasspath" refid="bc" />

		<!-- TODO: if using JDK1.4, comment out these lines -->
		<echo message="Set J2SE-1.5 = ${bootclasspath}"/>
		<property name="J2SE-1.5" value="${bootclasspath}"/>
		<condition property="bundleBootClasspath" value="${J2SE-1.5}"><isset property="J2SE-1.5"/></condition>
		<condition property="bundleJavacSource" value="1.5"><isset property="J2SE-1.5"/></condition>
		<condition property="bundleJavacTarget" value="1.5"><isset property="J2SE-1.5"/></condition>
		
		<property name="buildingOSGi" value="true" />
		<property name="collectingFolder" value="eclipse" />
		<property name="archivePrefix" value="eclipse" />

		<!-- Reduce the amount of info in the build log -->
		<property name="javacVerbose" value="false" />

		<property name="buildDirectory" location="${basedir}/../src/${archivePrefix}" />
		<property file="${basedir}/repoInfo.properties" />
		<property name="testBase" location="${buildDirectory}/../testing" />
		
		<echo message="buildAll.xml properties:"/>
		<echo message="basedir = ${basedir}"/>

		<!-- load a value for ${subprojectName}, among other variables, from build.cfg -->
		<property name="buildConfigFile" value="${basedir}/../build.cfg"/>
		<available file="${buildConfigFile}" type="file" property="buildConfigIsAvailable" />
		<fail message="Can't load build properties from ${buildConfigFile}" unless="buildConfigIsAvailable"/>
		<!-- TODO: set any special build-related properties here by echoing them into ${buildConfigFile}:
		<echo file="${buildConfigFile}" append="true">

# extra properties specific to just this build
propertyName=propertyValue
</echo>	-->

		<property file="${buildConfigFile}" />

		<echo message="buildVer = ${buildVer}"/>
		<echo message="subprojectName = ${subprojectName}"/>

		<condition property="isWindows">
			<equals arg1="${baseos}.${basews}" arg2="win32.win32" />
		</condition>
	</target>

		<target name="run" depends="init">
		<antcall target="buildAll" />
		<antcall target="cleanUp" />
	</target>

	<target name="buildAll">
		<ant antfile="build.xml" target="main">
			<property name="component" value="builder/${productName}" />
		</ant>
			
		<!-- TODO: if necessary, you can remove 3rd party jars used at build time from the zips here -->
		<!-- for example, see cdo's buildAll.xml -->

		<!-- TODO: you can run extra build scripts here, like for building additional zip bundles -->
			
	</target>

	<target name="cleanUp">
		<echo message="** Copying generated zips to drop folder... **" />
		<copy todir="${buildDirectory}/.." failonerror="false" overwrite="true">
			<fileset dir="${buildDirectory}/${buildLabel}" />
		</copy>
	</target>
		
</project>
