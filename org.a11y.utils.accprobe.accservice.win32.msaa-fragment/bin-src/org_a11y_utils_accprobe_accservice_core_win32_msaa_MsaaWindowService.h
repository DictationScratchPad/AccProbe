/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "Accessible.h"

#include <set>
using namespace std;

/* Header for class org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService */

#ifndef _Included_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService
#define _Included_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService
 * Method:    internalGetWindowsList
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalGetWindowsList
  (JNIEnv *, jclass);

/*
 * Class:     org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService
 * Method:    internalGetActiveWindow
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalGetActiveWindow
  (JNIEnv *, jobject);

/*
 * Class:     org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService
 * Method:    internalGetProcessId
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalGetProcessId
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService
 * Method:    internalSetWindowsHook
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalSetWindowsHook
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService
 * Method:    internalRemoveWindowsHook
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalRemoveWindowsHook
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService
 * Method:    internalGetCurrentProcessId
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalGetCurrentProcessId
(JNIEnv *env, jobject jca);

JNIEXPORT jboolean JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalIsParent
(JNIEnv *env, jobject jca, jint, jint);

JNIEXPORT void JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalSetWindowPosition
(JNIEnv *env, jclass jca, jint hwnd, jint pos);

JNIEXPORT void JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_setLayeredWindowAttributes
  (JNIEnv *env, jclass that, jint hwnd, jint crKey, jchar bAlpha, jint dwFlags);

JNIEXPORT jint JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_getSystemMetricsWidth
(JNIEnv *env, jclass that);

JNIEXPORT jint JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_getSystemMetricsHeight
(JNIEnv *env, jclass that);

JNIEXPORT void JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalShowWindow
(JNIEnv *enc, jclass jca, jint hwnd);

JNIEXPORT jobject JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalGetCurrentCursorLocation
 (JNIEnv *env, jclass jcls);

JNIEXPORT jstring JNICALL Java_org_a11y_utils_accprobe_accservice_core_win32_msaa_MsaaWindowService_internalGetWindowClass
(JNIEnv *env, jclass cls, jint hwnd);

#ifdef __cplusplus
}
#endif
#endif
